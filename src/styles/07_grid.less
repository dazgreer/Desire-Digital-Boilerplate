/***************************************
07_grid.less
***************************************/


// -----------------------------------------------------------------------------------------------
// COLUMN
// -----------------------------------------------------------------------------------------------

	[class*='col--'] {
		float: left;
  		width: 100%;
  		min-height: 1px;
	}
		
		
		
// -----------------------------------------------------------------------------------------------
// GRID
// -----------------------------------------------------------------------------------------------

	@media (min-width: @break-point-xs-min) {

		@iterations: @grid-columns;

		.loopingClass (@index) when (@index > 0) {

			.col--xs--@{index} { display: inline-block; width: (@grid-column-width*@index); }
			.offset--xs--@{index} { margin-left: (@grid-column-width*@index); }

			// next iteration
			.loopingClass((@index - 1));
		}

		// end the loop when index is 0
		.loopingClass (0) {}

		// "call" the loopingClass the first time with highest value
		.loopingClass (@iterations);

	}

	@media (min-width: @break-point-sm-min) {

		@iterations: @grid-columns;

		.loopingClass (@index) when (@index > 0) {

			.col--sm--@{index} { display: inline-block; width: (@grid-column-width*@index); }
			.offset--sm--@{index} { margin-left: (@grid-column-width*@index); }

			// next iteration
			.loopingClass((@index - 1));
		}

		// end the loop when index is 0
		.loopingClass (0) {}

		// "call" the loopingClass the first time with highest value
		.loopingClass (@iterations);

	}

	@media (min-width: @break-point-md-min) {

		@iterations: @grid-columns;

		.loopingClass (@index) when (@index > 0) {

			.col--md--@{index} { display: inline-block; width: (@grid-column-width*@index); }
			.offset--md--@{index} { margin-left: (@grid-column-width*@index); }

			// next iteration
			.loopingClass((@index - 1));
		}

		// end the loop when index is 0
		.loopingClass (0) {}

		// "call" the loopingClass the first time with highest value
		.loopingClass (@iterations);

	}

	@media (min-width: @break-point-lg-min) {

		@iterations: @grid-columns;

		.loopingClass (@index) when (@index > 0) {

			.col--lg--@{index} { display: inline-block; width: (@grid-column-width*@index); }
			.offset--lg--@{index} { margin-left: (@grid-column-width*@index); }

			// next iteration
			.loopingClass((@index - 1));
		}

		// end the loop when index is 0
		.loopingClass (0) {}

		// "call" the loopingClass the first time with highest value
		.loopingClass (@iterations);

	}

	@media (min-width: @break-point-xl-min) {

		@iterations: @grid-columns;

		.loopingClass (@index) when (@index > 0) {

			.col--xl--@{index} { display: inline-block; width: (@grid-column-width*@index); }
			.offset--xl--@{index} { margin-left: (@grid-column-width*@index); }

			// next iteration
			.loopingClass((@index - 1));
		}

		// end the loop when index is 0
		.loopingClass (0) {}

		// "call" the loopingClass the first time with highest value
		.loopingClass (@iterations);

	}
		
		

// -----------------------------------------------------------------------------------------------
// GRID CONTAINER
// -----------------------------------------------------------------------------------------------

	.row {
	}
	
	/* clear */
	.row:after {
		content: "";
  		display: table;
		clear: both;
	}
		
		

// -----------------------------------------------------------------------------------------------
// GUTTERS
// -----------------------------------------------------------------------------------------------

	[class*='col--'] {
		padding: 0 (@grid-gutter-width*2);

		@media (min-width: @break-point-sm-min) {
			padding: 0 (@grid-gutter-width);
		}
	}

	.row .row {
		margin-right: (@grid-gutter-width*-2);
		margin-left: (@grid-gutter-width*-2);

		@media (min-width: @break-point-sm-min) {
			margin-right: (@grid-gutter-width*-1);
			margin-left: (@grid-gutter-width*-1);
		}
	}



// -----------------------------------------------------------------------------------------------
// ROW PADDING
// -----------------------------------------------------------------------------------------------

	.row--pad {
		padding: (@grid-gutter-width*2) (@grid-gutter-width);
		margin-right: (@grid-gutter-width*2);
		margin-left: (@grid-gutter-width*2);

		@media (min-width: @break-point-sm-min) {
			margin-right: (@grid-gutter-width);
			margin-left: (@grid-gutter-width);
		}
	}


// -----------------------------------------------------------------------------------------------
// HIDDEN
// -----------------------------------------------------------------------------------------------

	.visible--xs--block,
	.visible--xs--inline,
	.visible--xs--inline-block,
	.visible--sm--block,
	.visible--sm--inline,
	.visible--sm--inline-block,
	.visible--md--block,
	.visible--md--inline,
	.visible--md--inline-block,
	.visible--lg--block,
	.visible--lg--inline,
	.visible--lg--inline-block,
	.visible--xl--block,
	.visible--xl--inline,
	.visible--xl--inline-block {
	  display: none !important;
	}

	.visible--xs {
	  @media (max-width: @break-point-xs-max) {
	    .responsive-visibility();
	  }
	}
	.visible--xs--block {
	  @media (max-width: @break-point-xs-max) {
	    display: block !important;
	  }
	}
	.visible--xs--inline {
	  @media (max-width: @break-point-xs-max) {
	    display: inline !important;
	  }
	}
	.visible--xs--inline-block {
	  @media (max-width: @break-point-xs-max) {
	    display: inline-block !important;
	  }
	}

	.visible--sm {
	  @media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
	    .responsive-visibility();
	  }
	}
	.visible--sm--block {
	  @media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
	    display: block !important;
	  }
	}
	.visible--sm--inline {
	  @media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
	    display: inline !important;
	  }
	}
	.visible--sm--inline-block {
	  @media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
	    display: inline-block !important;
	  }
	}

	.visible--md {
	  @media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
	    .responsive-visibility();
	  }
	}
	.visible--md--block {
	  @media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
	    display: block !important;
	  }
	}
	.visible--md--inline {
	  @media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
	    display: inline !important;
	  }
	}
	.visible--md--inline-block {
	  @media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
	    display: inline-block !important;
	  }
	}

	.visible--lg {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			.responsive-visibility();
		}
	}
	.visible--lg--block {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			display: block !important;
		}
	}
	.visible--lg--inline {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			display: inline !important;
		}
	}
	.visible--lg--inline-block {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			display: inline-block !important;
		}
	}
	
	.visible--xl {
		@media (min-width: @break-point-xl-min) {
			.responsive-visibility();
		}
	}
	.visible--xl--block {
		@media (min-width: @break-point-xl-min) {
			display: block !important;
		}
	}
	.visible--xl--inline {
		@media (min-width: @break-point-xl-min) {
			display: inline !important;
		}
	}
	.visible--xl--inline-block {
		@media (min-width: @break-point-xl-min) {
			display: inline-block !important;
		}
	}

	.hidden--xs {
	  @media (max-width: @break-point-xs-max) {
	    .responsive-invisibility();
	  }
	}
	.hidden--sm {
		@media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
			.responsive-invisibility();
		}
	}
	.hidden--md {
		@media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
			.responsive-invisibility();
		}
	}
	.hidden--lg {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			.responsive-invisibility();
		}
	}
	.hidden--xl {
		@media (min-width: @break-point-xl-min) {
			.responsive-invisibility();
		}
	}
		


// -----------------------------------------------------------------------------------------------
// OTHER HELPERS
// -----------------------------------------------------------------------------------------------

	.pull--right--xs {
	  @media (max-width: @break-point-xs-max) {
	    float: right;
	  }
	}
	.pull--right--sm {
		@media (min-width: @break-point-sm-min) and (max-width: @break-point-sm-max) {
			float: right;
		}
	}
	.pull--right--md {
		@media (min-width: @break-point-md-min) and (max-width: @break-point-md-max) {
			float: right;
		}
	}
	.pull--right--lg {
		@media (min-width: @break-point-lg-min) and (max-width: @break-point-lg-max) {
			float: right;
		}
	}
	.pull--right--xl {
		@media (min-width: @break-point-xl-min) {
			float: right;
		}
	}